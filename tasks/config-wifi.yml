---
- name: Install and configure udhcpd, hostapd, dnsmasq and ufw on Debian
  become: yes
  apt:
    name: 
    - udhcpd
    - dnsmasq
    - hostapd
    - ufw
    state: present
  when: ansible_facts.os_family == 'Debian'

- name: Install and configure udhcpd, hostapd, dnsmasq and ufw on Arch
  become: yes
  pacman:
    name: 
    - udhcpd
    - dnsmasq
    - hostapd
    - ufw
    state: present
  when: ansible_facts.os_family == 'Arch'

- name: Unmask hostapd
  become: yes
  command: sudo systemctl unmask hostapd
  when: hostapd_install.changed

- name: Start and enable ufw and hostapd services
  become: yes
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - ufw
    - hostapd

- name: Check vpntv OpenVPN POSTROUTNG rules to ufw is already present
  become: yes
  lineinfile:
    state: absent
    path: /etc/ufw/before.rules
    regexp: "^# VPNTV OPENVPN RULES"
  check_mode: true
  changed_when: false # This just makes things look prettier in the logs
  register: ufw_openvpn_rules_check

- name: Add OpenVPN POSTROUTNG rules to ufw
  become: yes
  lineinfile:
    state: present
    path: /etc/ufw/before.rules
    line: "\n# VPNTV OPENVPN RULES\n*nat\n:POSTROUTING ACCEPT [0:0]\n-A POSTROUTING -s 10.0.90.0/24 -o wlan1 -j MASQUERADE\nCOMMIT\n#VPNTV RULES END"
    backup: yes
  when: ufw_openvpn_rules_check.found == 0
  notify:
    - restart ufw

- name: Allow incoming traffic on wlan1 for specific ports
  become: yes
  ufw:
    rule: allow
    direction: in
    interface: wlan1
    port: "{{ item.port }}"
    proto: "{{ item.proto }}"
    state: present
  with_items:
    - { port: 67, proto: udp }
    - { port: 68, proto: udp }
    - { port: 53, proto: udp }

- name: Check vpntv dhcpcd static IP configuration was already done
  become: yes
  lineinfile:
    state: absent
    dest: /etc/dhcpcd.conf
    regexp: "^# VPNTV DHCPCD RULES"
  check_mode: true
  changed_when: false # This just makes things look prettier in the logs
  register: dhcpcd_vpntv_rules_check

- name: Add vpntv dhcpcd static IP configuration
  become: yes
  lineinfile:
    state: present
    path: /etc/dhcpcd.conf
    line: "\n# VPNTV DHCPCD RULES\ninterface=wlan1\nstatic ip_address=10.0.90.1/24\nnohook wpa_supplicant\n#VPNTV CONF END"
    backup: yes
  when: dhcpcd_vpntv_rules_check.found == 0
  notify:
    - restart dhcpcd

- name: Check vpntv dnsmasq configuration was already done
  become: yes
  lineinfile:
    state: absent
    dest: /etc/dnsmasq.conf
    regexp: "^# VPNTV DNSMASQ RULES"
  check_mode: true
  changed_when: false # This just makes things look prettier in the logs
  register: dnsmasq_vpntv_rules_check

- name: Add vpntv dnsmasq configuration
  become: yes
  lineinfile:
    state: present
    path: /etc/dnsmasq.conf
    line: "\n# VPNTV DNSMASQ RULES\ninterface=wlan1 # Listening interface\ndhcp-range=10.0.90.2,10.0.90.25,255.255.255.0,24h # Pool of IP addresses served via DHCP\ndomain=wlan # Local wireless DNS domain\naddress=/gw.wlan/10.0.90.1 # Alias for this router\n#VPNTV CONF END"
    backup: yes
  when: dnsmasq_vpntv_rules_check.found == 0
  notify:
    - restart dnsmasq

- name: Copy hostapd configuration file
  become: yes
  copy:
    src: ./templates/hostapd.conf.yaml
    dest: /etc/hostapd/hostapd.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - restart hostapd